{"version":3,"sources":["../node_modules/peerjs/dist sync","config.js","Context.js","components/header/switch/Switch.js","components/header/tooltip/Tooltip.js","components/header/Header.js","components/home/Home.js","components/fuel/input/Input.js","components/fuel/Fuel.js","components/streams/Streams.js","components/stream/Stream.js","Router.js","components/app/App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","config","Context","React","createContext","socket","io","port","path","peer","Peer","host","secure","debug","ContextProvider","children","useState","getDarkMode","setDarkMode","getTooltipText","setTooltipText","getTooltipVisibility","setTooltipVisibility","getTooltipDistances","setTooltipDistances","isSocketConn","setSocketConn","isPeerConn","setPeerConn","isStreamService","setStreamService","getStream","setStream","useEffect","on","Provider","value","enableTooltip","text","toolBoundingClientRect","toolWidth","right","left","toolDistanceLeft","toolDistanceRight","window","innerWidth","disableTooltip","startStream","stream","userId","call","console","log","emit","getVideoTracks","addEventListener","off","joinStream","streamSocket","streamHandler","answer","remoteStream","leaveStream","Switch","props","useContext","switchRef","useRef","activity","position","appearance","className","ref","onClick","callback","onMouseOver","current","getBoundingClientRect","onMouseOut","Tooltip","tooltipRef","toolOffsetLeft","toolOffsetRight","tooltipWidth","offsetWidth","style","styleLeft","Header","homeRef","headerIconsRef","switchProps","darkMode","wheelScrollEvent","preventDefault","scrollLeft","deltaY","removeEventListener","to","Home","Input","validity","validityState","valueState","getValue","setValue","placeholder","onChange","event","input","target","regex","test","modify","onFocus","Fuel","isBtnLock","setBtnLock","getFuelValue","setFuelValue","values","lapTimeMin","lapTimeS","lapTimeMS","fuelPerLap","raceLength","fuelPer100","distance","fuel","validities","lapTime","lapTimeMinProps","lapTimeSProps","lapTimeMSProps","fuelPerLapProps","raceLengthProps","fuelPer100Props","distanceProps","setResultSmoothly","newFuelValue","interpolateResult","iteration","limit","valueGap","timeGap","resultChangeLength","rawValue","obj","finalResult","Math","round","Number","EPSILON","ceil","setTimeout","setStateCallbacks","push","length","forEach","setStateCallback","Streams","getStreamList","setStreamList","isRefreshing","setRefreshing","availableStreams","refreshVisibility","startStreamVisibility","animation","streamList","map","streamId","fetchStreams","startTime","Date","now","fetch","location","protocol","then","res","remainingAnimationTime","json","array","err","navigator","mediaDevices","getDisplayMedia","video","audio","Stream","isStreamInitialized","setStreamInitialized","getPlayState","setPlayState","playMode","getScreenState","setScreenState","screenMode","useParams","videoRef","fullScreenHandle","useFullScreenHandle","srcObject","screenModeChanged","useCallback","state","handle","playModeChanged","autoPlay","playsInline","muted","onPlay","onPause","paused","ended","play","pause","active","exit","enter","Router","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2403cf32.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 54;","const config = {\r\n    port: 443,\r\n    socketPath: '/socket',\r\n    peerPath: '/peer'\r\n}\r\n\r\nexport { config }","import React from 'react'\r\nimport { io } from 'socket.io-client'\r\nimport Peer from 'peerjs'\r\nimport { config } from './config.js'\r\n\r\nconst Context = React.createContext()\r\n\r\nconst socket = io({\r\n    port: config.port,\r\n    path: config.socketPath\r\n})\r\nconst peer = new Peer({\r\n    host: '/',\r\n    port: config.port,\r\n    path: config.peerPath,\r\n    secure: true,\r\n    debug: 3\r\n})\r\n\r\nconst ContextProvider = ({children}) => {\r\n    const [getDarkMode, setDarkMode] = React.useState(true)\r\n    const [getTooltipText, setTooltipText] = React.useState('')\r\n    const [getTooltipVisibility, setTooltipVisibility] = React.useState(false)\r\n    const [getTooltipDistances, setTooltipDistances] = React.useState([0, 0]) // [distanceLeft, distanceRight]\r\n    const [isSocketConn, setSocketConn] = React.useState(false)\r\n    const [isPeerConn, setPeerConn] = React.useState(false)\r\n    const [isStreamService, setStreamService] = React.useState(false)\r\n    const [getStream, setStream] = React.useState(null)\r\n\r\n    React.useEffect(() => {\r\n        if (isSocketConn && isPeerConn) {\r\n            setStreamService(true)\r\n        } else {\r\n            setStreamService(false)\r\n        }\r\n    }, [isSocketConn, isPeerConn])\r\n\r\n    socket.on('connect', () => {\r\n        setSocketConn(true)\r\n    })\r\n    peer.on('open', id => {\r\n        setPeerConn(true)\r\n    })\r\n    socket.on('disconnect', () => {\r\n        setSocketConn(false)\r\n    })\r\n    peer.on('disconnected', () => {\r\n        setPeerConn(false)\r\n    })\r\n\r\n    function startStream(stream) {\r\n        setStream(stream)\r\n        socket.on('viewerJoining', userId => {\r\n            peer.call(userId, stream)\r\n            console.log(`User ${userId} joined`)\r\n        })\r\n        socket.on('viewerLeaving', userId => {\r\n            console.log(`User ${userId} left`)\r\n        })\r\n        socket.emit('registerStream')\r\n        stream.getVideoTracks()[0].addEventListener('ended', () => {\r\n            socket.emit('deregisterStream')\r\n            socket.off('viewerJoining')\r\n            socket.off('viewerLeaving')\r\n            setStream(null)\r\n        })\r\n    }\r\n\r\n    function joinStream(streamSocket, streamHandler) {\r\n        if (socket.id === streamSocket) {\r\n            streamHandler(getStream)\r\n        } else {\r\n            socket.on('viewerJoining', userId => {\r\n                console.log(`User ${userId} joined`)\r\n            })\r\n            socket.on('viewerLeaving', userId => {\r\n                console.log(`User ${userId} left`)\r\n            })\r\n            peer.on('call', call => {\r\n                call.answer()\r\n                call.on('stream', remoteStream => {\r\n                    streamHandler(remoteStream)\r\n                })\r\n            })\r\n        }\r\n        socket.emit('joinStream', streamSocket, peer.id)\r\n    }\r\n\r\n    function leaveStream(streamSocket) {\r\n        if (socket.id !== streamSocket) {\r\n            socket.off('viewerJoining')\r\n            socket.off('viewerLeaving')\r\n            peer.off('call')\r\n        }\r\n        socket.emit('leaveStream', streamSocket, peer.id)\r\n    }\r\n\r\n    function enableTooltip(text, toolBoundingClientRect) {\r\n        const toolWidth = toolBoundingClientRect.right - toolBoundingClientRect.left\r\n        const toolDistanceLeft = toolBoundingClientRect.left + (toolWidth / 2)\r\n        const toolDistanceRight = window.innerWidth - toolBoundingClientRect.right + (toolWidth / 2)\r\n        setTooltipText(text)\r\n        setTooltipDistances([toolDistanceLeft, toolDistanceRight])\r\n        setTooltipVisibility(true)\r\n    }\r\n    \r\n    function disableTooltip() {\r\n        setTooltipVisibility(false)\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            getDarkMode,\r\n            setDarkMode,\r\n            enableTooltip,\r\n            disableTooltip,\r\n            getTooltipText,\r\n            getTooltipVisibility,\r\n            getTooltipDistances,\r\n            isStreamService,\r\n            getStream,\r\n            startStream,\r\n            joinStream,\r\n            leaveStream\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport { ContextProvider, Context }\r\n","import React from 'react'\r\nimport './Switch.css'\r\nimport { Context } from '../../../Context.js'\r\n\r\nexport default function Switch({props}) {\r\n    const {\r\n        getDarkMode,\r\n        enableTooltip,\r\n        disableTooltip\r\n    } = React.useContext(Context)\r\n    const switchRef = React.useRef()\r\n    const activity = props.position ? 'on' : 'off'\r\n    const appearance = getDarkMode ? 'dark' : 'light'\r\n\r\n    return (\r\n        <div\r\n            className={`Switch ${appearance}`}\r\n            ref={switchRef}\r\n            onClick={props.callback}\r\n            onMouseOver={() => enableTooltip('Dark mode', switchRef.current.getBoundingClientRect())}\r\n            onMouseOut={() => disableTooltip()}>\r\n            <div className={`Switch-thumb ${appearance} ${activity}`}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Tooltip.css'\r\nimport { Context } from '../../../Context.js'\r\n\r\nexport default function Tooltip({props}) {\r\n    const {\r\n        getDarkMode,\r\n        getTooltipText,\r\n        getTooltipVisibility,\r\n        getTooltipDistances\r\n    } = React.useContext(Context)\r\n    const tooltipRef = React.useRef()\r\n    const appearance = getDarkMode ? 'dark' : 'light'\r\n    const activity = getTooltipVisibility ? 'active' : 'idle'\r\n\r\n    React.useEffect(() => {\r\n        const toolOffsetLeft = getTooltipDistances[0]\r\n        const toolOffsetRight = getTooltipDistances[1]\r\n        const tooltipWidth = tooltipRef.current.offsetWidth\r\n        if (toolOffsetLeft < (tooltipWidth / 2)) {\r\n            tooltipRef.current.style.left = '0px'\r\n            tooltipRef.current.style.right = 'auto'\r\n        } else if (toolOffsetRight < (tooltipWidth / 2)) {\r\n            tooltipRef.current.style.right = '0px'\r\n            tooltipRef.current.style.left = 'auto'\r\n        } else {\r\n            const styleLeft = toolOffsetLeft - (tooltipWidth / 2)\r\n            tooltipRef.current.style.left = styleLeft + 'px'\r\n            tooltipRef.current.style.right = 'auto'\r\n        }\r\n    }, [getTooltipDistances])\r\n\r\n    return (\r\n        <div className={`Tooltip ${activity} ${appearance}`} ref={tooltipRef}>\r\n            {getTooltipText}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Header.css'\r\nimport Switch from './switch/Switch.js'\r\nimport Tooltip from './tooltip/Tooltip.js'\r\nimport { Link } from 'react-router-dom'\r\nimport { Context } from '../../Context.js'\r\n\r\nexport default function Header() {\r\n    const { \r\n        getDarkMode,\r\n        setDarkMode,\r\n        enableTooltip,\r\n        disableTooltip\r\n    } = React.useContext(Context)\r\n    const appearance = getDarkMode ? 'dark' : 'light'\r\n    const homeRef = React.useRef()\r\n    const headerIconsRef = React.useRef()\r\n    const switchProps = {\r\n        position: getDarkMode,\r\n        callback: () => {\r\n            setDarkMode(darkMode => !darkMode)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        function wheelScrollEvent(e) {\r\n            e.preventDefault()\r\n            headerIconsRef.current.scrollLeft += e.deltaY\r\n        }\r\n        headerIconsRef.current.addEventListener('wheel', wheelScrollEvent)\r\n        return () => {\r\n            headerIconsRef.current.removeEventListener('wheel', wheelScrollEvent)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`Header ${appearance}`}>\r\n            <div className='Header-content'>\r\n                <Link to='/'>\r\n                    <div \r\n                        className={`Header-home ${appearance}`}\r\n                        ref={homeRef}\r\n                        onMouseOver={() => enableTooltip('Home', homeRef.current.getBoundingClientRect())}\r\n                        onMouseOut={() => disableTooltip()}/>\r\n                </Link>\r\n                <div className='Header-gap'/>\r\n                <div className='Header-icons' ref={headerIconsRef}>\r\n                    <Switch props={switchProps}/>\r\n                </div>\r\n                <div className='Header-gap'/>\r\n            </div>\r\n            <Tooltip/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Home.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { Context } from '../../Context.js'\r\n\r\nexport default function Home() {\r\n    const {getDarkMode} = React.useContext(Context)\r\n    const appearance = getDarkMode ? 'dark' : 'light'\r\n    return (\r\n        <div className='Home'>\r\n            <Link to='/fuel'>\r\n                <div className={`Home-item Home-fuel ${appearance}`}/>\r\n            </Link>\r\n            <div className={`Home-item Home-gamepad ${appearance}`}/>\r\n            <Link to='/streams'>\r\n                <div className={`Home-item Home-streaming ${appearance}`}/>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Input.css'\r\nimport {Context} from '../../../Context.js'\r\n\r\nexport default function Input({props}) {\r\n    const {getDarkMode} = React.useContext(Context)\r\n    const appearance = getDarkMode ? 'dark' : 'light'\r\n    const validity = props.validityState[0] ? 'valid' : 'invalid'\r\n    const [getValue, setValue] = props.valueState\r\n\r\n    function modify(event) {\r\n        const input = event.target.value\r\n        if ('regex' in props) {\r\n            if (props.regex.test(input))\r\n                setValue(input)\r\n        } else {\r\n            setValue(input)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <input\r\n            className={`Input ${appearance} ${validity}`}\r\n            placeholder={props.placeholder}\r\n            value={getValue}\r\n            onChange={(e) => {modify(e)}}\r\n            onFocus={props.onClick} />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Fuel.css'\r\nimport Input from './input/Input.js'\r\nimport { Context } from '../../Context.js'\r\n\r\nexport default function Fuel() {\r\n    const {getDarkMode} = React.useContext(Context)\r\n    const appearance = getDarkMode ? 'dark' : 'light'\r\n    const [isBtnLock, setBtnLock] = React.useState(false)\r\n    const [getFuelValue, setFuelValue] = React.useState(0)\r\n    const values = {\r\n        lapTimeMin: React.useState(''),\r\n        lapTimeS: React.useState(''),\r\n        lapTimeMS: React.useState(''),\r\n        fuelPerLap: React.useState(''),\r\n        raceLength: React.useState(''),\r\n        fuelPer100: React.useState(''),\r\n        distance: React.useState(''),\r\n        fuel: React.useState('')\r\n    }\r\n    const validities = {\r\n        lapTime: React.useState(true),\r\n        fuelPerLap: React.useState(true),\r\n        raceLength: React.useState(true),\r\n        fuelPer100: React.useState(true),\r\n        distance: React.useState(true)\r\n    }\r\n    const lapTimeMinProps = {\r\n        'valueState': values.lapTimeMin,\r\n        'validityState': validities.lapTime,\r\n        'placeholder': 'min',\r\n        'onClick': () => {validities.lapTime[1](true)},\r\n        'regex': /^\\d{0,2}$/\r\n    }\r\n    const lapTimeSProps = {\r\n        'valueState': values.lapTimeS,\r\n        'validityState': validities.lapTime,\r\n        'placeholder': 's',\r\n        'onClick': () => {validities.lapTime[1](true)},\r\n        'regex': /^[0-5]?[0-9]?$/\r\n    }\r\n    const lapTimeMSProps = {\r\n        'valueState': values.lapTimeMS,\r\n        'validityState': validities.lapTime,\r\n        'placeholder': 'ms',\r\n        'onClick': () => {validities.lapTime[1](true)},\r\n        'regex': /^\\d{0,2}$/\r\n    }\r\n    const fuelPerLapProps = {\r\n        'valueState': values.fuelPerLap,\r\n        'validityState': validities.fuelPerLap,\r\n        'placeholder': 'l',\r\n        'onClick': () => {validities.fuelPerLap[1](true)},\r\n        'regex': /^(\\d{0,2}|\\d{1,2}\\.\\d?)$/\r\n    }\r\n    const raceLengthProps = {\r\n        'valueState': values.raceLength,\r\n        'validityState': validities.raceLength,\r\n        'placeholder': 'min',\r\n        'onClick': () => {validities.raceLength[1](true)},\r\n        'regex': /^\\d{0,4}$/\r\n    }\r\n    const fuelPer100Props = {\r\n        'valueState': values.fuelPer100,\r\n        'validityState': validities.fuelPer100,\r\n        'placeholder': 'l',\r\n        'onClick': () => {validities.fuelPer100[1](true)},\r\n        'regex': /^(\\d{0,2}|\\d{1,2}\\.\\d?)$/\r\n    }\r\n    const distanceProps = {\r\n        'valueState': values.distance,\r\n        'validityState': validities.distance,\r\n        'placeholder': 'km',\r\n        'onClick': () => {validities.distance[1](true)},\r\n        'regex': /^\\d{0,4}$/\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        values.fuel[1](getFuelValue + ' l')\r\n    }, [getFuelValue])\r\n\r\n    function calcRaceFuel() {\r\n        if (isBtnLock)\r\n            return\r\n        let lapTime = values.lapTimeMin[0] * 1 * 60000\r\n        lapTime += values.lapTimeS[0] * 1 * 1000\r\n        lapTime += values.lapTimeMS[0] * 1\r\n        const fuelPerLap = values.fuelPerLap[0] * 1\r\n        const raceLength = values.raceLength[0] * 60000\r\n\r\n        const setStateCallbacks = []\r\n        if (lapTime === 0) {\r\n            setStateCallbacks.push(validities.lapTime[1])\r\n        }\r\n        if (fuelPerLap === 0) {\r\n            setStateCallbacks.push(validities.fuelPerLap[1])\r\n        }\r\n        if (raceLength === 0) {\r\n            setStateCallbacks.push(validities.raceLength[1])\r\n        }\r\n        if (setStateCallbacks.length > 0) {\r\n            setStateCallbacks.forEach(setStateCallback => {\r\n                setStateCallback(false)\r\n            });\r\n            return\r\n        }\r\n\r\n        const laps = raceLength / lapTime\r\n        let newFuelValue = fuelPerLap * laps\r\n        setResultSmoothly(newFuelValue)\r\n    }\r\n\r\n    function calcRoadFuel() {\r\n        if (isBtnLock)\r\n            return\r\n        const fuelPer100 = values.fuelPer100[0] * 1\r\n        const distance = values.distance[0] * 1\r\n\r\n        const setStateCallbacks = []\r\n        if (fuelPer100 === 0) {\r\n            setStateCallbacks.push(validities.fuelPer100[1])\r\n        }\r\n        if (distance === 0) {\r\n            setStateCallbacks.push(validities.distance[1])\r\n        }\r\n        if (setStateCallbacks.length > 0) {\r\n            setStateCallbacks.forEach(setStateCallback => {\r\n                setStateCallback(false)\r\n            });\r\n            return\r\n        }\r\n\r\n        const distancePer100 = distance / 100\r\n        let newFuelValue = fuelPer100 * distancePer100\r\n        setResultSmoothly(newFuelValue)\r\n    }\r\n\r\n    function setResultSmoothly(newFuelValue) {\r\n        setBtnLock(true)\r\n        const resultChangeLength = 500\r\n        const numberOfChanges = 50\r\n        const valueGap = (newFuelValue - getFuelValue) / numberOfChanges\r\n        const timeGap = resultChangeLength / numberOfChanges\r\n        const interpolationDataObj = {\r\n            iteration: 0,\r\n            limit: numberOfChanges,\r\n            valueGap: valueGap,\r\n            timeGap: timeGap,\r\n            rawValue: getFuelValue\r\n        }\r\n        interpolateResult(interpolationDataObj)\r\n    }\r\n\r\n    function interpolateResult(obj) {\r\n        if (obj.iteration >= obj.limit) {\r\n            //fixing floating point precision\r\n            let finalResult = Math.round((obj.rawValue + Number.EPSILON) * 100) / 100\r\n            finalResult = Math.ceil(finalResult)\r\n            setFuelValue(finalResult)\r\n            setBtnLock(false)\r\n            return\r\n        }\r\n        setTimeout(() => {\r\n            obj.rawValue += obj.valueGap\r\n            setFuelValue(Math.ceil(obj.rawValue))\r\n            obj.iteration++\r\n            interpolateResult(obj)\r\n        }, obj.timeGap)\r\n    }\r\n\r\n    return (\r\n        <div className='Fuel'>\r\n            <div className='Fuel-categories'>\r\n                <div className='Fuel-category'>\r\n                    <div className='x0 y0 align-right'>\r\n                        Lap time\r\n                    </div>\r\n                    <div className='x1 y0'>\r\n                        <Input props={lapTimeMinProps}/>\r\n                    </div>\r\n                    <div className='x2 y0'>\r\n                        <Input props={lapTimeSProps}/>\r\n                    </div>\r\n                    <div className='x3 y0'>\r\n                        <Input props={lapTimeMSProps}/>\r\n                    </div>\r\n                    <div className='x0 y1 align-right'>\r\n                        Fuel per lap\r\n                    </div>\r\n                    <div className='x1 y1'>\r\n                        <Input props={fuelPerLapProps}/>\r\n                    </div>\r\n                    <div className='x0 y2 align-right'>\r\n                        Race length\r\n                    </div>\r\n                    <div className='x1 y2'>\r\n                        <Input props={raceLengthProps}/>\r\n                    </div>\r\n                    <div className='x03 y3'>\r\n                        <div className={`button ${appearance}`} onClick={calcRaceFuel}>\r\n                            Calculate race fuel\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='Fuel-category'>\r\n                    <div className='x0 y0 align-right'>\r\n                        Fuel per 100 km\r\n                    </div>\r\n                    <div className='x1 y0'>\r\n                        <Input props={fuelPer100Props}/>\r\n                    </div>\r\n                    <div className='x0 y1 align-right'>\r\n                        Distance\r\n                    </div>\r\n                    <div className='x1 y1'>\r\n                        <Input props={distanceProps}/>\r\n                    </div>\r\n                    <div className='x01 y2'>\r\n                        <div className={`button ${appearance}`} onClick={calcRoadFuel}>\r\n                            Calculate road fuel\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='Fuel-result'>\r\n                {values.fuel[0]}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Streams.css'\r\nimport { Context } from '../../Context.js'\r\n\r\nexport default function Streams() {\r\n    const { getDarkMode, isStreamService, getStream, startStream } = React.useContext(Context)\r\n    const [getStreamList, setStreamList] = React.useState([])\r\n    const [isRefreshing, setRefreshing] = React.useState(false)\r\n    const appearance = getDarkMode ? 'dark' : 'light'\r\n    const availableStreams = isStreamService ? getStreamList.length : 'No service'\r\n    const refreshVisibility = isStreamService ? 'visible' : 'hidden'\r\n    const startStreamVisibility = isStreamService && getStream == null ? 'visible' : 'hidden'\r\n    const animation = isRefreshing ? 'rotating' : 'still'\r\n    const streamList = getStreamList.map(streamId => {\r\n      return (\r\n        <Link to={`/stream/${streamId}`} key={streamId}>\r\n          <div className={`button ${appearance}`}>\r\n            {streamId}\r\n          </div>\r\n        </Link>\r\n      )\r\n    })\r\n\r\n    React.useEffect(() => {\r\n      if (isStreamService)\r\n        fetchStreams()\r\n      else\r\n        setStreamList([])\r\n    }, [isStreamService])\r\n\r\n    function fetchStreams() {\r\n      const startTime = Date.now()\r\n      setRefreshing(true)\r\n      fetch(window.location.protocol + '//' + window.location.host + '/api/streams')\r\n        .then(res => {\r\n          const remainingAnimationTime = 1000 - ((Date.now() - startTime) % 1000)\r\n          setTimeout(() => {\r\n            setRefreshing(false)\r\n          }, remainingAnimationTime)\r\n          return res.json()\r\n        })\r\n        .then(array => {\r\n          setStreamList(array)\r\n        }, err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n\r\n    function refresh() {\r\n      if (isStreamService && \r\n        !isRefreshing && \r\n        refreshVisibility === 'visible')\r\n        fetchStreams()\r\n    }\r\n\r\n    function setupStream() {\r\n      if (isStreamService && startStreamVisibility === 'visible') {\r\n        navigator.mediaDevices.getDisplayMedia({\r\n          video: true,\r\n          audio: true\r\n        }).then(stream => {\r\n          startStream(stream)\r\n        }, err => {\r\n          console.log(err)\r\n        })\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className='Streams-grid'>\r\n            <div className='Streams-header'>Streams</div>\r\n            <div className={`Streams-separator ${appearance}`}></div>\r\n            <div\r\n              className={`button Streams-start ${appearance} ${startStreamVisibility}`}\r\n              onClick={setupStream}>\r\n                Start stream\r\n            </div>\r\n            <div className='Streams-available'>\r\n              Available streams: {availableStreams}\r\n              <div\r\n                className={`Streams-refresh ${animation} ${appearance} ${refreshVisibility}`}\r\n                onClick={refresh}\r\n              />\r\n            </div>\r\n            <div className='Streams-available-grid'>{streamList}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport './Stream.css'\r\nimport { Context } from '../../Context.js'\r\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen'\r\n\r\nexport default function Stream() {\r\n    const { joinStream, leaveStream, isStreamService } = React.useContext(Context)\r\n    const [isStreamInitialized, setStreamInitialized] = React.useState(false)\r\n    const [getPlayState, setPlayState] = React.useState(false)\r\n    const playMode = getPlayState ? 'playing' : 'paused'\r\n    const [getScreenState, setScreenState] = React.useState(false)\r\n    const screenMode = getScreenState ? 'full' : 'window'\r\n    const { id } = useParams()\r\n    const videoRef = React.useRef()\r\n    const fullScreenHandle = useFullScreenHandle()\r\n\r\n    React.useEffect(() => {\r\n        if (isStreamService && !isStreamInitialized) {\r\n            joinStream(id, stream => {\r\n                videoRef.current.srcObject = stream\r\n            })\r\n            setStreamInitialized(true)\r\n        }\r\n        return () => {\r\n            if (isStreamInitialized) {\r\n                leaveStream(id)\r\n            }\r\n        }\r\n    }, [isStreamService, isStreamInitialized])\r\n\r\n    const screenModeChanged = React.useCallback((state, handle) => {\r\n        setScreenState(state)\r\n    }, [fullScreenHandle])\r\n\r\n    function playModeChanged(state) {\r\n        setPlayState(state)\r\n    }\r\n\r\n    function togglePlay() {\r\n        if (videoRef.current.paused || videoRef.current.ended) {\r\n            videoRef.current.play()\r\n        } else {\r\n            videoRef.current.pause()\r\n        }\r\n    }\r\n\r\n    function toggleScreen() {\r\n        if (fullScreenHandle.active) {\r\n            fullScreenHandle.exit()\r\n        } else {\r\n            fullScreenHandle.enter()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FullScreen className='Stream-wrapper' handle={fullScreenHandle} onChange={screenModeChanged}> \r\n            <video\r\n                className='Stream-player'\r\n                ref={videoRef}\r\n                autoPlay\r\n                playsInline\r\n                muted\r\n                onPlay={() => playModeChanged(true)}\r\n                onPause={() => playModeChanged(false)}\r\n            >\r\n            </video>\r\n            <div className='Stream-controls'>\r\n                <div className={`Stream-control Stream-play ${playMode}`} onClick={togglePlay}></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div className={`Stream-control Stream-full-screen ${screenMode}`} onClick={toggleScreen}></div>\r\n            </div>\r\n        </FullScreen>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from './components/home/Home.js'\r\nimport Fuel from './components/fuel/Fuel.js'\r\nimport Streams from './components/streams/Streams.js'\r\nimport Stream from './components/stream/Stream.js'\r\n\r\nexport default function Router() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/'>\r\n                <Home />\r\n            </Route>\r\n            <Route exact path='/fuel'>\r\n                <Fuel />\r\n            </Route>\r\n            <Route exact path='/streams'>\r\n                <Streams />\r\n            </Route>\r\n            <Route exact path='/stream/:id'>\r\n                <Stream />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from '../header/Header.js'\r\nimport Router from '../../Router.js';\r\nimport { Context } from '../../Context.js'\r\n\r\nfunction App() {\r\n  const {getDarkMode} = React.useContext(Context)\r\n  const appearance = getDarkMode ? 'dark' : 'light'\r\n  return (\r\n    <div className='App'>\r\n      <Header/>\r\n      <div className={`App-content ${appearance}`}>\r\n        <Router/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './components/app/App.js'\r\nimport { ContextProvider } from './Context.js'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </ContextProvider>, \r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}