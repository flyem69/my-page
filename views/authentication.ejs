<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>my-page</title>
    <style>
        :root {
            --weak-dark: rgb(64, 64, 64);
            --mid-dark: rgb(48, 48, 48);
            --strong-dark: rgb(32, 32, 32);
            --weak-light: rgb(160, 160, 160);
            --mid-light: rgb(184, 184, 184);
            --strong-light: rgb(208, 208, 208);
            --red: rgb(200, 0, 0);
            --transition: 0.2s;
        }

        body {
            margin: 0;
            font-family: sans-serif;
            background-color: var(--strong-light);
            color: var(--strong-dark);
        }

        label {
            font-size: 17px;
        }

        form {
            display: flex;
            flex-flow: column;
            gap: 10px;
            align-items: center;
            width: fit-content;
            outline: var(--strong-dark) solid 2px;
            border-radius: 20px;
            padding: 20px;
        }

        input[type=text],
        input[type=password] {
            width: 250px;
            padding: 5px;
            outline: none;
            border: 2px solid;
            border-radius: 5px;
            background-color: transparent;
            border-color: var(--weak-light);
            font-size: 15px;
            transition: border-color var(--transition);
        }

        input[type=text]:focus {
            border-color: var(--strong-dark);
        }

        input[type=password]:focus {
            border-color: var(--strong-dark);
        }

        input[type=submit] {
            display: inline-block;
            border: 2px solid;
            border-radius: 5px;
            padding: 5px;
            color: var(--strong-dark);
            border-color: var(--strong-light);
            background-color: transparent;
            transition: border-color var(--transition);
            text-align: center;
            font-size: 20px;
            margin-top: 10px;
        }

        input[type=submit]:hover {
            cursor: pointer;
            border-color: var(--strong-dark);
        }

        .container {
            position: fixed;
            display: flex;
            flex-wrap: wrap;
            column-gap: 200px;
            row-gap: 50px;
            height: 100%;
            width: 100%;
            align-content: center;
            justify-content: center;
        }

        #login-container {
            flex-direction: row-reverse;
        }

        #registration-container {
            visibility: hidden;
            flex-direction: row;
        }

        .switch-forms {
            font-size: 40px;
            align-self: center;
        }

        .switch-forms:hover {
            cursor: pointer;
        }

        #message-box {
            position: fixed;
            display: flex;
            flex-direction: column;
            top: 10px;
            gap: 10px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 1;
        }

        .message {
            display: grid;
            grid-template-columns: 1fr auto;
            align-items: center;
            gap: 5px;
            background-color: var(--strong-light);
            border: 2px solid var(--strong-dark);
            border-radius: 10px;
            padding: 5px;
        }

        .message .text {
            word-break: break-all;
        }

        .message .close:hover {
            cursor: pointer;
        }

        .message .close {
            width: 20px;
            height: 20px;
            position: relative;
        }

        .message .close:after {
            content: '';
            height: 20px;
            border-left: 2px solid var(--strong-dark);
            position: absolute;
            transform: rotate(45deg);
            left: 9px;
        }

        .message .close:before {
            content: '';
            height: 20px;
            border-left: 2px solid var(--strong-dark);
            ;
            position: absolute;
            transform: rotate(-45deg);
            left: 9px;
        }

        @media screen and (max-width: 650px) {
            #message-box {
                width: 300px;
            }
        }

        @media (min-width: 650px) and (max-width: 900px) {
            #message-box {
                width: 550px;
            }
        }

        @media screen and (min-width: 900px) {
            #message-box {
                width: 800px;
            }
        }
    </style>
</head>

<body>
    <div id="message-box">
        <% if (Array.isArray(locals.messages)) { %>
            <% messages.forEach(function(message) { %> 
                <div class="message">
                    <div class="text"><%= message %></div>
                    <div class="close" onclick="removeMessage(this.parentElement)"></div>
                </div>
            <% }) %> 
        <% } %>
    </div>
    <div class="container" id="login-container">
        <form name="sign-in" action="/login" method="POST">
            <label for="emailOrName">Email address or username</label>
            <input type="text" name="emailOrName">
            <label for="password">Password</label>
            <input type="password" name="password">
            <input type="submit" name="submit" value="Sign in">
        </form>
        <div class="switch-forms" onclick="switchToRegistration()">No account?</div>
    </div>
    <div class="container" id="registration-container">
        <form name="sign-up" action="/registration" onsubmit="return isPasswordRepeated()" method="POST">
            <label for="email">Email address</label>
            <input type="text" name="email">
            <label for="name">Username</label>
            <input type="text" name="name">
            <label for="password">Password</label>
            <input type="password" name="password" oninput="validateRepeatedPassword()">
            <label for="repeat-password">Repeat password</label>
            <input type="password" name="repeat-password" oninput="validateRepeatedPassword()">
            <input type="submit" name="submit" value="Sign up">
        </form>
        <div class="switch-forms" onclick="switchToLogin()">Back to login</div>
    </div>
    <script>
        const loginContainer = document.getElementById('login-container')
        const registrationContainer = document.getElementById('registration-container')
        const loginForm = document.forms['sign-in'].elements
        const registrationForm = document.forms['sign-up'].elements
        const computedStyle = getComputedStyle(document.body)

        function switchToRegistration() {
            loginContainer.style.visibility = 'hidden'
            registrationContainer.style.visibility = 'visible'
        }

        function switchToLogin() {
            registrationContainer.style.visibility = 'hidden'
            loginContainer.style.visibility = 'visible'
        }

        function isPasswordRepeated() {
            return registrationForm['password'].value === registrationForm['repeat-password'].value
        }

        function validateRepeatedPassword() {
            if (isPasswordRepeated()) {
                registrationForm['repeat-password'].style.borderColor = null
            } else {
                registrationForm['repeat-password'].style.borderColor = computedStyle.getPropertyValue('--red')
            }
        }

        function removeMessage(message) {
            message.remove()
        }

        function addMessage(content) {
            const messageBox = document.getElementById('message-box')
            const message = document.createElement('div')
            const text = document.createElement('div')
            const close = document.createElement('div')
            message.className = 'message'
            text.className = 'text'
            text.appendChild(document.createTextNode(content))
            close.className = 'close'
            close.onclick = function () { removeMessage(message) }
            message.appendChild(text)
            message.appendChild(close)
            messageBox.appendChild(message)
        }
    </script>
</body>

</html>